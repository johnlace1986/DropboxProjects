<Application
    x:Class="MediaPlayer.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vc="clr-namespace:MediaPlayer.ValueConverters"
    xmlns:ts="clr-namespace:MediaPlayer.TemplateSelectors"
    xmlns:ss="clr-namespace:MediaPlayer.StyleSelectors"
    xmlns:ce="clr-namespace:MediaPlayer.Presentation.UserControls.ControlExtenders"
    xmlns:effects="clr-namespace:MediaPlayer.Presentation.UserControls.Effects"
    xmlns:pages="clr-namespace:MediaPlayer.Presentation.UserControls.Pages"
    xmlns:business="clr-namespace:MediaPlayer.Business"
    xmlns:library="clr-namespace:MediaPlayer.Library.Business;assembly=MediaPlayer.Library"
    xmlns:etk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
    xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
    StartupUri="MediaPlayerDialog.xaml">
    <Application.Resources>

        <!-- Misc -->        
        <vc:BorderThicknessToStrokeThicknessConverter x:Key="borderThicknessToStrokeThicknessConverter" />

        <DataTemplate x:Key="emptyDataTemplate">
        </DataTemplate>

        <Style TargetType="Button" x:Key="viewButtonStyle">
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>


        <!-- Polygon Points -->
        <media:PointCollection x:Key="upPoints">0,1 0.5,0 1,1 0.7,1 0.5,0.6 0.3,1</media:PointCollection>
        <media:PointCollection x:Key="addPoints">0,0.38 0.38,0.38, 0.38,0 0.62,0 0.62,0.38 1,0.38 1,0.62 0.62,0.62 0.62,1 0.38,1 0.38,0.62 0,0.62</media:PointCollection>
        <media:PointCollection x:Key="deletePoints">0,0 0.4,0.5 0,1 0.2,1 0.5,0.6 0.8,1 1,1 0.6,0.5 1,0 0.8,0 0.5,0.4 0.2,0</media:PointCollection>
        <media:PointCollection x:Key="downPoints">0,0 0.5,1 1,0 0.7,0 0.5,0.4 0.3,0</media:PointCollection>
        <media:PointCollection x:Key="greaterThanPoints">0,0 1,0.5 0,1 0,0.7 0.5,0.5 0,0.3</media:PointCollection>
        <media:PointCollection x:Key="lessThanPoints">1,0 0,0.5 1,1 1,0.7 0.5,0.5 1,0.3</media:PointCollection>
        
        <!-- Windows -->
        <vc:WindowControlButtonVisibilityConverter x:Key="windowControlButtonVisibilityConverter" />
        <vc:MaximizeButtonEnabledConverter x:Key="maximizeButtonEnabledConverter" />
        <vc:ResizeModeThumbVisibiliyConverter x:Key="resizeModeThumbVisibilityConverter" />

        <Style TargetType="Button" x:Key="windowTitleButtonStyle">
            <Setter Property="Margin" Value="3, 0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter
                            ContentSource="Content" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate TargetType="Window" x:Key="mediaPlayerWindowTemplate">
            <Border>
                <Border.Effect>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Border.Effect>
                <Grid
                    Margin="{TemplateBinding Margin}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border
                            x:Name="brdHeader"
                            Grid.Row="0"
                            CornerRadius="6, 6, 0, 0"
                            BorderBrush="Black"
                            BorderThickness="1"                                
                            Background="Black"
                            MouseMove="brdHeader_MouseMove">
                            <Grid>
                                <Border
                                    x:Name="brdTitleBar"
                                    Opacity="0.26"
                                    CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"
                                    MouseDown="brdTitleBar_MouseDown">
                                    <Border.Background>
                                        <LinearGradientBrush
                                            StartPoint="0, 0"
                                            EndPoint="0, 1">
                                            <GradientStop Color="White" Offset="0.0" />
                                            <GradientStop Color="Black" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>

                                <Grid
                                    Margin="6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Margin="6"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Foreground="#e2e4e7 "
                                        FontFamily="Armata"
                                        TextTrimming="CharacterEllipsis"
                                        Text="{TemplateBinding Title}" />

                                    <StackPanel
                                        Grid.Column="1"
                                        Orientation="Horizontal"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center">

                                        <Button
                                            x:Name="btnMinimize"
                                            Style="{StaticResource windowTitleButtonStyle}"
                                            Visibility="{TemplateBinding ResizeMode, Converter={StaticResource windowControlButtonVisibilityConverter}}"
                                            Click="btnMinimize_Click">
                                            <Image Source="Images\minimize.png" />
                                        </Button>

                                        <Button
                                            x:Name="btnRestoreMaximize"
                                            Style="{StaticResource windowTitleButtonStyle}"
                                            Visibility="{TemplateBinding ResizeMode, Converter={StaticResource windowControlButtonVisibilityConverter}}"
                                            IsEnabled="{TemplateBinding ResizeMode, Converter={StaticResource maximizeButtonEnabledConverter}}"
                                            Click="btnRestoreMaximize_Click">
                                            <Image Source="Images\maximize.png" />
                                        </Button>

                                        <Button
                                            x:Name="btnClose"
                                            Style="{StaticResource windowTitleButtonStyle}"
                                            Click="btnClose_Click">
                                            <Image Source="Images\close.png" />
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>

                        <Border
                            x:Name="brdContent"
                            Grid.Row="1"
                            BorderBrush="#505050"
                            BorderThickness="1, 0, 1, 1"
                            CornerRadius="0, 0, 6, 6"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                ContentSource="Content" />
                        </Border>
                    </Grid>

                    <Grid
                        Opacity="0"
                        Visibility="{TemplateBinding ResizeMode, Converter={StaticResource resizeModeThumbVisibilityConverter}}">
                        <Thumb
                            x:Name="thmTopLeft"
                            Width="12"
                            Height="12"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            Cursor="SizeNWSE"
                            DragDelta="thmTopLeft_DragDelta"/>

                        <Thumb
                            x:Name="thmTop"
                            Height="6"
                            Margin="12, 0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Stretch"
                            Cursor="SizeNS"
                            DragDelta="thmTop_DragDelta"/>

                        <Thumb
                            x:Name="thmTopRight"
                            Width="12"
                            Height="12"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Right"
                            Cursor="SizeNESW"
                            DragDelta="thmTopRight_DragDelta"/>

                        <Thumb
                            x:Name="thmRight"
                            Width="6"
                            Margin="0, 12"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Right"
                            Cursor="SizeWE"
                            DragDelta="thmRight_DragDelta"/>

                        <Thumb
                            x:Name="thmBottomRight"
                            Width="12"
                            Height="12"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Right"
                            Cursor="SizeNWSE"
                            DragDelta="thmBottomRight_DragDelta"/>

                        <Thumb
                            x:Name="thmBottom"
                            Height="6"
                            Margin="12, 0"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Stretch"
                            Cursor="SizeNS"
                            DragDelta="thmBottom_DragDelta"/>

                        <Thumb
                            x:Name="thmBottomLeft"
                            Width="12"
                            Height="12"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Left"
                            Cursor="SizeNESW"
                            DragDelta="thmBottomLeft_DragDelta"/>

                        <Thumb
                            x:Name="thmLeft"
                            Width="6"
                            Margin="0, 12"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left"
                            Cursor="SizeWE"
                            DragDelta="thmLeft_DragDelta"/>
                    </Grid>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter TargetName="brdHeader" Property="CornerRadius" Value="0" />
                    <Setter TargetName="brdHeader" Property="BorderThickness" Value="0" />
                    <Setter TargetName="brdContent" Property="CornerRadius" Value="0" />
                    <Setter TargetName="brdContent" Property="BorderThickness" Value="0" />
                    <Setter TargetName="btnRestoreMaximize" Property="Content">
                        <Setter.Value>
                            <Image Source="Images\restore.png" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Window" x:Key="dialogWindow">
            <Setter Property="Margin" Value="7" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="Background" Value="#EEF1F4" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="FontFamily" Value="Tahoma" />
            <Setter Property="Template" Value="{StaticResource mediaPlayerWindowTemplate}" />
            <Setter Property="ShowInTaskbar" Value="False" />
        </Style>        


        <!-- Labels -->
        <Style TargetType="Label" x:Key="labelStyle">
            <Setter Property="Margin" Value="6" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource labelStyle}" />


        <!-- Text Boxes-->
        <ControlTemplate TargetType="TextBox" x:Key="TextBoxTemplate">
            <Border
                x:Name="brdBackground"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <ScrollViewer
                    x:Name="PART_ContentHost"
                    Foreground="{TemplateBinding Foreground}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>


        <!-- Wrapping Text Block-->
        <Style TargetType="{x:Type TextBlock}" x:Key="wrappingTextBlock">
            <Setter Property="Margin" Value="6, 12" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Password Boxes -->
        <ControlTemplate TargetType="PasswordBox" x:Key="PasswordBoxTemplate">
            <Border
                x:Name="brdBackground"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <ScrollViewer
                    x:Name="PART_ContentHost"
                    Foreground="{TemplateBinding Foreground}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>


        <!-- Group Boxes -->
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Padding" Value="6" />
            <Setter Property="BorderBrush" Value="#94A6B7" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>



        <!-- Buttons -->
        <ControlTemplate TargetType="Button" x:Key="buttonTemplate">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="3"
                Padding="{TemplateBinding Padding}">
                <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    ContentSource="Content" />
            </Border>
        </ControlTemplate>

        <Style TargetType="Button" x:Key="buttonStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush
                        StartPoint="0, 0"
                        EndPoint="0, 1">
                        <GradientStop Color="#92c1ed" Offset="0.0" />
                        <GradientStop Color="#537ba1" Offset="1.0" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Armata" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="#808f9e"/>
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Padding" Value="6, 3" />
            <Setter Property="Margin" Value="6" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template" Value="{StaticResource buttonTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush
                                StartPoint="0, 0"
                                EndPoint="0, 1">
                                <GradientStop Color="#537ba1" Offset="0.0" />
                                <GradientStop Color="#92c1ed" Offset="1.0" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonStyle}">
            
        </Style>
        
        <!-- Integer Up/Down-->
        <Style TargetType="{x:Type etk:IntegerUpDown}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="Minimum" Value="0" />
        </Style>


        <!-- Combo Boxes -->
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="6" />
        </Style>


        <!-- Check Boxes -->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
        </Style>


        
        <!-- Radio Buttons -->
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!-- Slider -->
        <Style TargetType="Thumb" x:Key="sliderThumbStyle">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Grid>
                            <Border
                                CornerRadius="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RepeatButton" x:Key="sliderRepeatButtonStyle">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
        </Style>

        <ControlTemplate TargetType="Slider" x:Key="sliderTemplate">
            <Border
                Background="{TemplateBinding Background}">
                <Border
                    CornerRadius="6"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Foreground}">
                    <Grid>
                        <Border
                            x:Name="TrackerBackground">
                            <Canvas>
                                <Rectangle
                                    x:Name="PART_SelectionRange"
                                    Visibility="Hidden"
                                    Height="{TemplateBinding Height}"
                                    Fill="Red"
                                    Stroke="Blue"
                                    StrokeThickness="1" />
                            </Canvas>
                        </Border>
                        <Track
                            x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton                                    
                                    Command="{x:Static Slider.DecreaseLarge}"
                                    Style="{StaticResource sliderRepeatButtonStyle}">
                                    <RepeatButton.Background>
                                        <LinearGradientBrush
                                            StartPoint="0, 0"
                                            EndPoint="0, 1">
                                            <GradientStop Color="#C3D8E9" Offset="0.0" />
                                            <GradientStop Color="#AABCCB" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </RepeatButton.Background>
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Grid>
                                                <Border
                                                    CornerRadius="6"
                                                    Margin="0, 0, -6, 0"
                                                    Background="{TemplateBinding Background}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    Command="{x:Static Slider.IncreaseLarge}"
                                    Background="Transparent"
                                    Style="{StaticResource sliderRepeatButtonStyle}">
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Foreground="White"
                                    Width="16"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Style="{StaticResource sliderThumbStyle}"
                                    FontFamily="Armata"
                                    FontSize="10"
                                    Margin="-3, -1"
                                    VerticalContentAlignment="Bottom"
                                    HorizontalContentAlignment="Center">
                                    <Thumb.Background>
                                        <LinearGradientBrush
                                            StartPoint="0, 0"
                                            EndPoint="0, 1">
                                            <GradientStop Color="#c0d1dc" Offset="0.0" />
                                            <GradientStop Color="#9fb0be" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Thumb.Background>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </Border>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type Slider}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="Minimum" Value="0" />
            <Setter Property="IsMoveToPointEnabled" Value="True" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush
                        StartPoint="0, 0"
                        EndPoint="0, 1">
                        <GradientStop Color="#c0d1dc" Offset="0.0" />
                        <GradientStop Color="#f8fcff" Offset="1.0" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#7b8692" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template" Value="{StaticResource sliderTemplate}" />
        </Style>
        
        
        <!-- Progress Bar -->
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Margin" Value="6" />
            <Setter Property="Foreground" Value="Blue" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        
        
        <!-- List Boxes -->
        <Style TargetType="Button" x:Key="listBoxItemButton" BasedOn="{StaticResource viewButtonStyle}">
            <Setter Property="Background" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" />
            <Setter Property="Foreground" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse
                                Stretch="Fill"
                                Fill="{TemplateBinding Background}" />

                            <Label
                                x:Name="lblContent"
                                Margin="0"
                                Padding="0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter                                                                
                                    ContentSource="Content" />
                            </Label>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Foreground" Value="Transparent">
                                <Setter TargetName="lblContent" Property="Foreground" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ControlTemplate TargetType="ListBoxItem" x:Key="listBoxItemTemplate">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                Margin="{TemplateBinding Margin}">
                <ContentPresenter VerticalAlignment="Center" />
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Padding" Value="3" />
            <Setter Property="Template" Value="{StaticResource listBoxItemTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#537ba1" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="#808f9e" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="IsFocused" Value="False" />
                    </MultiTrigger.Conditions>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type ListBox}">
            <Setter Property="Margin" Value="6" />
        </Style>


        <!-- Menu Items -->
        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="#E2E4E7" BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate TargetType="MenuItem" x:Key="MenuItemTopLevelHeaderTemplateKey">
            <Border
                Name="Border"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>

                    <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        Focusable="False"
                        PopupAnimation="Fade">
                        <Border 
                            Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="#f5f5f5"
                            BorderBrush="#959595"
                            BorderThickness="1"
                            Padding="2">
                            <StackPanel  
                                IsItemsHost="True" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>

                    <Label
                        Name="Header"
                        Margin="0"
                        Foreground="{TemplateBinding Foreground}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Content="{TemplateBinding Header}" />
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush
                                StartPoint="0, 0"
                                EndPoint="0, 1">
                                <GradientStop Color="#E2E4E7" Offset="0.0" />
                                <GradientStop Color="#B2B2B4" Offset="1.0" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="Border" Property="BorderBrush" Value="#808f9e" />
                    <Setter TargetName="Border" Property="CornerRadius" Value="3" />
                    <Setter TargetName="Header"  Property="Foreground" Value="#4c555e" />
                </Trigger>

                <Trigger Property="IsSubmenuOpen" Value="True">
                    <Setter TargetName="Border" Property="CornerRadius" Value="3, 3, 0, 0" />
                    <Setter TargetName="Border" Property="Background" Value="#E2E4E7" />
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="MenuItem" x:Key="MenuItemTopLevelItemTemplateKey">
            <Border
                Name="Border"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Label
                        Name="Header"
                        Margin="0"
                        Foreground="{TemplateBinding Foreground}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Content="{TemplateBinding Header}" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush
                                StartPoint="0, 0"
                                EndPoint="0, 1">
                                <GradientStop Color="#E2E4E7" Offset="0.0" />
                                <GradientStop Color="#B2B2B4" Offset="1.0" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="Border" Property="BorderBrush" Value="#808f9e" />
                    <Setter TargetName="Border" Property="CornerRadius" Value="3" />
                    <Setter TargetName="Header"  Property="Foreground" Value="#4c555e" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="MenuItem" x:Key="MenuItemSubmenuHeaderTemplateKey">
            <Border
                Name="Border"
                Padding="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border
                        Name="IconBorder"
                        Background="#e2e4e7"
                        Width="28"
                        BorderBrush="White"
                        BorderThickness="0, 0, 1, 0"
                        VerticalAlignment="Stretch">
                        <ContentPresenter 
                            Width="16"
                            Height="16"
                            Name="Icon"
                            Margin="6,0,6,0"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Icon"/>
                    </Border>

                    <Border
                        Name="HeaderBorder"
                        Grid.Column="1"
                        Background="Transparent"
                        VerticalAlignment="Stretch">
                        <Label 
                            Name="Header"
                            Margin="0"
                            Grid.Column="1"
                            Foreground="{TemplateBinding Foreground}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter
                                Margin="0, 0, 48, 0"
                                ContentSource="Header" />
                        </Label>
                    </Border>

                    <Border
                        Name="InputGestureBorder"
                        Grid.Column="2"
                        Background="Transparent"
                        VerticalAlignment="Stretch">
                        <TextBlock
                            x:Name="InputGestureText"
                            Margin="12, 0, 0, 0"
                            Text="{TemplateBinding InputGestureText}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            DockPanel.Dock="Right"
                            Foreground="#4c555e"/>
                    </Border>

                    <Border
                        Name="ExpandArrowBorder"
                        Grid.Column="3"
                        Background="Transparent"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Stretch">
                        <Path 
                            Margin="12, 0"
                            Name="ExpandArrow"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Data="M 0 0 L 0 7 L 4 3.5 Z" 
                            Fill="#4c555e" />
                    </Border>

                    <Popup 
                        Name="Popup"
                        Placement="Right"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        Focusable="False"
                        PopupAnimation="Fade">
                        <Border 
                            Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="#f5f5f5"
                            BorderBrush="#959595"
                            BorderThickness="1"
                            Padding="2">
                            <StackPanel  
                                IsItemsHost="True" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="InputGestureText" Value="">
                    <Setter TargetName="InputGestureBorder" Property="Visibility" Value="Collapsed"/>
                </Trigger>

                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#4c555e"/>
                    <Setter TargetName="IconBorder" Property="Background" Value="Transparent" />
                    <Setter TargetName="IconBorder" Property="BorderBrush" Value="Transparent" />
                    <Setter TargetName="Header" Property="Foreground" Value="#E2E4E7"/>
                    <Setter TargetName="InputGestureText" Property="Foreground" Value="#E2E4E7"/>
                    <Setter TargetName="ExpandArrow" Property="Fill" Value="#E2E4E7" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="MenuItem" x:Key="MenuItemSubmenuItemTemplateKey">
            <Border
                Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border
                        Name="IconBorder"
                        Background="#e2e4e7"
                        Width="28"
                        BorderBrush="White"
                        BorderThickness="0, 0, 1, 0"
                        VerticalAlignment="Stretch">
                        <ContentPresenter 
                            Width="16"
                            Height="16"
                            Name="Icon"
                            Margin="6,0,6,0"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Icon"/>
                    </Border>

                    <Border
                        Name="CheckedBorder"
                        Background="Transparent"
                        HorizontalAlignment="Left"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Width="28">
                        <Border
                            Name="Check" 
                            Visibility="Collapsed"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Polygon
                                Name="CheckMark"
                                Width="12"
                                Height="12"
                                Visibility="Hidden"
                                Points="0, 0.5 0.3,1 1,0 0.8,0 0.32,0.7 0.2 0.5"
                                Fill="#4C555E"
                                Stretch="Fill" />
                        </Border>
                    </Border>

                    <Border
                        Name="HeaderBorder"
                        Grid.Column="1"
                        Background="Transparent"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Label 
                            Name="HeaderHost"
                            Margin="0, 0, 48, 0"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Header}"
                            Foreground="{TemplateBinding Foreground}"/>
                    </Border>

                    <Border
                        Name="InputGestureBorder"
                        Grid.Column="2"
                        Background="Transparent"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <TextBlock
                            x:Name="InputGestureText"
                            Text="{TemplateBinding InputGestureText}"
                            Margin="12, 0, 0, 0"
                            DockPanel.Dock="Right"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="#4c555e"/>
                    </Border>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="InputGestureText" Value="">
                    <Setter TargetName="InputGestureBorder" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="IconBorder" Property="Background" Value="Transparent" />
                    <Setter TargetName="IconBorder" Property="BorderBrush" Value="Transparent" />
                    <Setter TargetName="Border" Property="Background" Value="#4c555e"/>
                    <Setter TargetName="HeaderHost" Property="Foreground" Value="#E2E4E7"/>
                    <Setter TargetName="InputGestureText" Property="Foreground" Value="#E2E4E7"/>
                    <Setter TargetName="CheckMark" Property="Fill" Value="#E2E4E7"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="#666667" />
            <Setter Property="FontFamily" Value="Tahoma" />
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template" Value="{StaticResource MenuItemTopLevelHeaderTemplateKey}"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                    <Setter Property="FontFamily" Value="Armata" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template" Value="{StaticResource MenuItemTopLevelItemTemplateKey}"/>
                    <Setter Property="FontFamily" Value="Armata" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{StaticResource MenuItemSubmenuHeaderTemplateKey}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" Value="{StaticResource MenuItemSubmenuItemTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Data Grid -->
        <Style TargetType="Button" x:Key="dataGridRowButton" BasedOn="{StaticResource viewButtonStyle}">
            <Setter Property="Background" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
            <Setter Property="Foreground" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse
                                x:Name="elp"
                                Stretch="Fill"
                                Fill="{TemplateBinding Background}" />

                            <Label
                                x:Name="lblContent"
                                Margin="0"
                                Padding="0"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter                                                                
                                    ContentSource="Content" />
                            </Label>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate TargetType="DataGridColumnHeader" x:Key="dataGridColumnHeaderTemplate">
            <Grid>
                <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid>
                        <Border
                            Opacity="0.02">
                            <Border.Background>
                                <LinearGradientBrush
                                    StartPoint="0, 0"
                                    EndPoint="0, 1">
                                    <GradientStop Color="White" Offset="0.00"  />
                                    <GradientStop Color="White" Offset="0.49"  />
                                    <GradientStop Color="Black" Offset="0.51" />
                                    <GradientStop Color="Black" Offset="1.00" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter
                                Grid.Column="0"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentSource="Content" />

                            <Polygon
                                Name="UpArrow"
                                Grid.Column="1"
                                Margin="12, 6"
                                Points="1,1 0.5,0 0,1"
                                Width="8"
                                Height="4"
                                Fill="#4c555e"
                                Stretch="Fill"
                                Visibility="Collapsed"/>

                            <Polygon
                                Name="DownArrow"
                                Grid.Column="1"
                                Margin="12, 6"
                                Points="0,0 0.5,1 1,0"
                                Width="8"
                                Height="4"
                                Fill="#4c555e"
                                Visibility="Collapsed"
                                Stretch="Fill" />
                        </Grid>

                        <effects:InnerGlow
                            Colour="White"
                            Opacity="0.1" />
                    </Grid>
                </Border>

                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Width="3" Opacity="0" VerticalAlignment="Stretch" Cursor="SizeWE" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="SortDirection" Value="Ascending">
                    <Setter TargetName="UpArrow" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="SortDirection" Value="Descending">
                    <Setter TargetName="DownArrow" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="ContentControl" x:Key="dataGridColumnHeaderStyle">
            <Setter Property="FontFamily" Value="Armata" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="12, 6"/>
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Background" Value="#e2e4e7" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="#808f9e"/>
            <Setter Property="BorderThickness" Value="0, 0, 1, 1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template" Value="{StaticResource dataGridColumnHeaderTemplate}" />
        </Style>

        <ControlTemplate TargetType="DataGridCell" x:Key="dataGridCellTemplate">
            <Border
                Background="{TemplateBinding Background}"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}">
                <Label
                    Margin="0"
                    Padding="{TemplateBinding Padding}"
                    Foreground="{TemplateBinding Foreground}"
                    Effect="{TemplateBinding Effect}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <ContentPresenter/>
                </Label>
            </Border>
        </ControlTemplate>

        <Style TargetType="DataGridCell" x:Key="dataGridCellStyle">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template" Value="{StaticResource dataGridCellTemplate}" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
        </Style>

        <Style TargetType="DataGridCell" x:Key="dataGridNumberCellStyle" BasedOn="{StaticResource dataGridCellStyle}">
            <Setter Property="HorizontalContentAlignment" Value="Right" />
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Background" Value="#EEF1F4" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="BorderBrush" Value="#808f9e" />
            <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#D5D8DA" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#537ba1" />
                    <Setter Property="BorderBrush" Value="#537ba1" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGrid" x:Key="dataGridStyle">
            <Setter Property="Margin" Value="6" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeColumns" Value="True" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserSortColumns" Value="True" />
            <Setter Property="SelectionUnit" Value="FullRow" />
            <Setter Property="ColumnWidth" Value="Auto" />
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource dataGridColumnHeaderStyle}" />
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
            <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
            <Setter Property="RowHeaderWidth" Value="0" />
            <Setter Property="CellStyle" Value="{StaticResource dataGridCellStyle}" />
            <Setter Property="BorderBrush" Value="#808f9e" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="RowDetailsVisibilityMode" Value="Visible" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="AlternationCount" Value="2" />
            <Setter Property="SelectionMode" Value="Extended" />
            <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
            <EventSetter Event="MouseLeftButtonDown" Handler="dataGrid_MouseLeftButtonDown" />
        </Style>

        <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource dataGridStyle}">
            
        </Style>

        <Style TargetType="{x:Type ce:ItemsSourceTrackingDataGrid}" BasedOn="{StaticResource dataGridStyle}">
            
        </Style>

        <!-- Media Control Buttons -->
        <LinearGradientBrush
            x:Key="lgbPolygonFill"
            StartPoint="0, 0"
            EndPoint="0, 1">
            <GradientStop Color="#c0d1dc" Offset="0.0" />
            <GradientStop Color="#9fb0be" Offset="1.0" />
        </LinearGradientBrush>

        <Style TargetType="Polygon" x:Key="mediaControlPolygon">
            <Setter Property="Stretch" Value="Fill" />
            <Setter Property="Stroke" Value="#7b8692" />
            <Setter Property="StrokeThickness" Value="1" />
            <Setter Property="Fill" Value="{StaticResource lgbPolygonFill}" />
        </Style>

        <Style TargetType="Button" x:Key="mediaControlButton">
            <Setter Property="Margin" Value="3" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{StaticResource lgbPolygonFill}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            CornerRadius="6"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ContentSource="Content" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <LinearGradientBrush
                                StartPoint="0, 0"
                                EndPoint="0, 1">
                                <GradientStop Color="#9fb0be" Offset="0.0" />
                                <GradientStop Color="#c0d1dc" Offset="1.0" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="stopButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Button
                            Style="{StaticResource mediaControlButton}"
                            Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Border
                                    BorderBrush="#7b8692"
                                    BorderThickness="1"
                                    Background="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />

                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ContentSource="Content" />
                            </Grid>
                        </Button>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Tracker Text Block -->
        <Style TargetType="TextBlock" x:Key="trackerTextBlock">
            <Setter Property="FontFamily" Value="Armata" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Tracker Label -->
        <Style TargetType="Label" x:Key="trackerLabel">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Armata" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="12, 0" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Width" Value="72" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Search Text Box-->
        <Style TargetType="Button" x:Key="roundedButtonStyle">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="9, 6" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="18" />
            <Setter Property="Width" Value="18" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse
                                Fill="{TemplateBinding Background}"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{TemplateBinding BorderThickness}" />

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="Content" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate TargetType="TextBox" x:Key="searchTextBoxTemplate">
            <Border                            
                CornerRadius="18">
                <Grid>
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"
                        Padding="{TemplateBinding Padding}">
                        <Grid
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Image
                                Grid.Column="0"
                                Margin="9, 6, 6, 6"
                                Source="Images\search.png" />

                            <TextBlock
                                x:Name="txtWatermark"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                FontFamily="Armata"
                                FontStyle="Italic"
                                Margin="3, 0"
                                Opacity="0.5"/>

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Margin="0" />

                            <Button
                                x:Name="btnClearSearch"
                                Grid.Column="2"
                                Background="{TemplateBinding Foreground}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Style="{StaticResource roundedButtonStyle}"
                                Click="btnClearSearch_Click">
                                <Polygon
                                    Margin="6"
                                    Fill="White"
                                    Stretch="Fill"
                                    Points="{StaticResource deletePoints}" />
                            </Button>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsFocused" Value="False" />
                        <Condition Property="Text" Value="" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="txtWatermark" Property="Text" Value="Search" />                    
                </MultiTrigger>
                <Trigger Property="Text" Value="">
                    <Setter TargetName="btnClearSearch" Property="Visibility" Value="Collapsed" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="TextBox" x:Key="searchTextBoxStyle">
            <Setter Property="Height" Value="36" />
            <Setter Property="BorderBrush" Value="#8696a8" />
            <Setter Property="Foreground" Value="#8696a8" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template" Value="{StaticResource searchTextBoxTemplate}" />
        </Style>


        <!-- Media Item Headed List Box -->
        <ControlTemplate TargetType="ListBoxItem" x:Key="mediaItemFilterListBoxItemTemplate">
            <Border
                Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}"
                Margin="{TemplateBinding Margin}">
                <ContentPresenter
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </Border>
        </ControlTemplate>

        <ControlTemplate TargetType="Label" x:Key="mediaItemHeadedListBoxLabelTemplate">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Border
                        Opacity="0.02">
                        <Border.Background>
                            <LinearGradientBrush
                                StartPoint="0, 0"
                                EndPoint="0, 1">
                                <GradientStop Color="White" Offset="0.00"  />
                                <GradientStop Color="White" Offset="0.49"  />
                                <GradientStop Color="Black" Offset="0.51" />
                                <GradientStop Color="Black" Offset="1.00" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <ContentPresenter
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentSource="Content">
                        <ContentPresenter.Effect>
                            <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                        </ContentPresenter.Effect>
                    </ContentPresenter>

                    <effects:InnerGlow
                        Colour="White"
                        Opacity="0.1" />
                </Grid>
            </Border>
        </ControlTemplate>

        <Style TargetType="Label" x:Key="mediaItemFilterListBoxHeaderLabel">
            <Setter Property="FontFamily" Value="Armata" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="6" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Background" Value="#e2e4e7" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="#808f9e" />
            <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
            <Setter Property="Template" Value="{StaticResource mediaItemHeadedListBoxLabelTemplate}" />
        </Style>

        <Style TargetType="ListBoxItem" x:Key="mediaItemFilterListBoxContainerStyle">
            <Setter Property="Template" Value="{StaticResource mediaItemFilterListBoxItemTemplate}" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Padding" Value="6" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#537ba1" />
                    <Setter Property="Foreground" Value="#ffffff" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="IsFocused" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#91A1B1"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListBox" x:Key="mediaItemFilterListBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="SelectedIndex" Value="0" />
            <Setter Property="SelectionMode" Value="Extended" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource mediaItemFilterListBoxContainerStyle}" />
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="HasItems" Value="True" />
                        <Condition Property="SelectedItem" Value="{x:Null}" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectedIndex" Value="0" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>


        <!-- Media Item Data Grid -->
        <ts:MediaItemPartsRowDetailSelector x:Key="mediaItemPartsRowDetailSelector" />

        <ss:MediaItemRowStyleSelector x:Key="mediaItemRowStyleSelector" />

        <Style TargetType="DataGridRow" x:Key="hiddenMediaItemRowStyle">
            <Setter Property="Foreground" Value="#727374" />
            <Setter Property="Background" Value="#EEF1F4" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="Padding" Value="6" />
            <Setter Property="BorderBrush" Value="#808f9e" />
            <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#D5D8DA" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#537ba1" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Page Summary-->
        <Style TargetType="Label" x:Key="pageSummaryLabelStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush
                        StartPoint="0, 0"
                        EndPoint="0, 1">
                        <GradientStop Color="#E2E4E7" Offset="0.0" />
                        <GradientStop Color="#B2B2B4" Offset="1.0" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="BorderBrush" Value="#808f9e" />
            <Setter Property="BorderThickness" Value="0, 1, 0, 0" />
            <Setter Property="FontFamily" Value="Armata" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="24, 12" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                            <Label
                                Foreground="{TemplateBinding Foreground}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}">
                                <Label.Effect>
                                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                                </Label.Effect>
                            </Label>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- File Types Data Grid -->
        <Style TargetType="Label" x:Key="fileTypeDataGridHeader">
            <Setter Property="Margin" Value="0, 12" />
            <Setter Property="FontFamily" Value="Armata" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Root Folders Data Grid -->
        <Style TargetType="Label" x:Key="rootFolderDataGridHeader">
            <Setter Property="Margin" Value="0, 12" />
            <Setter Property="FontFamily" Value="Armata" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#4c555e" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>
